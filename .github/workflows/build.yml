name: Build


permissions:
  attestations: write
  contents: write
  id-token: write
  packages: write


on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:
    inputs:
      version:
        description: 'Upstream uv version (leave blank for latest)'
        required: false
        type: string


jobs:
  version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get-version.outputs.version }}

    steps:
    - uses: actions/checkout@v5
    - name: Get current version
      id: get-version
      run: |
        versionOverride="${{ inputs.version }}"
        version="${versionOverride:-$(gh release view --repo astral-sh/uv --json name --jq ".name")}"

        echo Version $version >> $GITHUB_STEP_SUMMARY

        # if we didn't already release $version from this repo, set the output param
        gh release view $version || echo version=$version >> $GITHUB_OUTPUT
      env:
        GITHUB_TOKEN: ${{ github.token }}


  build:
    runs-on: ubuntu-latest
    needs: version
    if: ${{ needs.version.outputs.version != '' }}
    env:
      VERSION: ${{ needs.version.outputs.version }}

    steps:
    - uses: actions/checkout@v5
      with:
        fetch-depth: 0

    - uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0

    - id: restore
      name: Restore
      run: dotnet restore

    - id: pack
      name: Download and pack assets
      run: dotnet pack
      env:
        GITHUB_TOKEN: ${{ github.token }}

    - name: Attest
      uses: actions/attest-build-provenance@v3
      with:
        subject-path: 'artifacts/package/release/*'

    - name: Compute checksums
      run: |
        pushd artifacts/package/release
        for file in *;
          do sha256sum -b $file > $file.sha256;
        done
        popd

    - uses: actions/upload-artifact@v4
      with:
        name: packages
        path: artifacts/package/release

    - id: push
      name: Push nuget packages
      run: |
        dotnet nuget push 'artifacts/package/release/*.nupkg' --source https://api.nuget.org/v3/index.json -k ${{ secrets.NUGET_KEY }}
        dotnet nuget push 'artifacts/package/release/*.nupkg' --source https://nuget.pkg.github.com/benjamin-hodgson/index.json -k ${{ github.token }}

    - name: Create Github Release
      if: steps.push.conclusion == 'success'
      run: gh release create $VERSION ./artifacts/package/release/*
      env:
        GITHUB_TOKEN: ${{ github.token }}
